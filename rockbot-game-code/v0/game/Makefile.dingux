#############################################################################
# Makefile for building: ../bin/rockbot
# Generated by qmake (2.01a) (Qt 4.7.0) on: ter jul 27 23:04:39 2010
# Project:  rockbot.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile rockbot.pro
#############################################################################

####### Compiler, tools and options

CC            = mipsel-linux-gcc
CXX           = mipsel-linux-g++
DEFINES       = 
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES) -DDINGUX
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES) -DDINGUX
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4 -I../common -I.
LINK          = mipsel-linux-g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L$(DINGUX_TOOLCHAIN_PREFIX)/lib -lSDL_mixer -lSDL_image -lSDL_ttf `sdl-config --libs` -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = game.c 
OBJECTS       = game.o
DESTDIR       = ../bin/
TARGET        = ../bin/rockbot.dge

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) ../bin/ || $(MKDIR) ../bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

game.o: game.c ps2_modules.h \
		cdvd_rpc.h \
		cdvd.h \
		include/types.h \
		include/headers.h \
		include/sound.h \
		include/sound_nds.h \
		common.h \
		projectiles.h \
		graphics.h \
		object.h \
		game.h \
		input.h \
		npcs.h \
		include/config.h \
		intro.h \
		include/transfer.h \
		../common/dialogs.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o game.o game.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

